{"name":"pywinauto","tagline":"64-bit Py2/Py3 compatible pywinauto (Windows GUI Automation) by Mark McMahon (c)","body":"Windows GUI Automation with Python\r\n============\r\n\r\npywinauto (c) Mark Mc Mahon and Co., 2006 - 2015\r\n\r\npywinauto is coming back! Set of python modules to automate the Microsoft Windows GUI \r\nallows you to send mouse and keyboard actions to windows dialogs and controls, \r\nbut it also supports more complex actions.\r\n\r\nNewer version adds 64-bit support and works on Python 3.x.\r\n\r\n![Notepad.exe automation example](http://wiki.pywinauto.googlecode.com/hg/notepad-simple2-ir.gif)\r\n\r\nIt is simple and the resulting scripts are very readable. How simple?\r\n\r\n```python\r\napp.Notepad.MenuSelect(\"Help->About Notepad\")\r\napp.AboutNotepad.OK.Click()\r\napp.Notepad.Edit.TypeKeys (\"pywinauto Works!\", with_spaces = True)\r\n```\r\n\r\n### Roadmap\r\n* pywinauto 0.5.0 is planned until end of June, 2015.\r\n - [x] 64-bit Python is supported\r\n - [x] Python 2.x/3.x compatibility\r\n - [!] Added pyWin32 dependency\r\n - [x] Improvements for Toolbar, TreeView, UpDown and DateTimePicker wrappers\r\n - [x] Improved `best_match` algorithm allows names like `ToolbarFile`\r\n - [x] Clicks can be performed with pressed Ctrl or Shift\r\n - [x] Drag-n-drop and scrolling methods (DragMouse, DragMouseInput, MouseWheelInput)\r\n - [x] Improved menu support: handling OWNERDRAW menu items; access by command_id (like `$23453`)\r\n - [x] `RemoteMemoryBlock` can now detect memory corruption by checking guard signature\r\n - [ ] Upgraded `taskbar` module\r\n - [x] `sysinfo` module for checking 32-bit or 64-bit OS and Python\r\n - [x] `set_foreground` flag in `TypeKeys` method for typing into in-place controls\r\n - [x] `create_new_console` flag in `Application.start_` method\r\n\r\n### Supported controls\r\n* Native Windows controls (full support through Win32 API)\r\n* .NET Windows Forms (partial support through Win32 API, some basic controls only)\r\n\r\n\r\n### Dependencies\r\n* pyWin32 package ([build 219](http://sourceforge.net/projects/pywin32/files/pywin32/Build%20219/) is recommended). This is NOT required for ActivePython (except 3.4 64-bit).\r\n\r\n### Setup\r\n\r\n* Install pyWin32 extensions above (no need for Active Python)\r\n* Download [master branch as ZIP](https://github.com/vasily-v-ryabov/pywinauto-64/archive/master.zip)\r\n* Just unpack and run **python.exe setup.py install**\r\n\r\n### Testing status\r\n\r\n* [Unit tests pass rate for master branch](https://github.com/vasily-v-ryabov/pywinauto-64/wiki/Unit-testing-status)\r\n\r\n#### Packages required for running unit tests\r\n* [Pillow](https://pypi.python.org/pypi/Pillow/2.7.0) or PIL\r\n* [coverage](https://pypi.python.org/pypi/coverage)","google":"UA-63103714-1","note":"Don't delete this file! It's used internally to help with page regeneration."}